[
["index.html", "Ecology of Animal Societies Bookdown Template 1 Intro 1.1 First Special Feature", " Ecology of Animal Societies Bookdown Template Author Name 2021-02-04 1 Intro Hello ðŸ‘‹, you are looking at a minimal {bookdown} template that can be used to document your coding projects. The documentation of this template is broken down into several chunks: 1 Intro: General intro to the project/ template (you are looking at this right nowâ€¦) 2 Configuration: Here youâ€™ll see which parts you should customize if you choose to adopt this template for your own projects. 3 Comilation: How to actually compile the bookdown document once you have added you own content. 4 Markdown Tips and Tricks: This section includes an introduction into a couple of minor features that are build into this template and that go a little beyond the standard markdown elements. 5 Template Script: This is a blank section. Its purpose is to provide a minimal template that can be copied to add more sections. 6 References: This is where all cited sources of your project will be listed. Feel free to adapt this template to your needs ðŸ˜„. 1.1 First Special Feature Individual code blocks can be collapsed and expanded using the collapse button (this specific demo slider blow is a dummy though - look in the next chapters for working examplesâ€¦): In the upper right corner, there is also the option to toggle the code collapsing globally: global code Collapsing your code can really help to get an eagle-perspective on your scripts and to asses the degree of documentation as well as the flow of thoughts throughout / the logic behind your script. "],
["configuration.html", "2 Configuration 2.1 Important files 2.2 Clean Up 2.3 Nice-to-haves", " 2 Configuration These are the parts of the template that you will want to adjust so that the document actually represents your own content. 2.1 Important files You will definitively need to adjust the following files before starting: vignettes/_bookdown.yml: vignettes/_output.yml vignettes/index.Rmd 2.1.1 Configuration within _bookdown.yml Here, you adjust the Rmd files that are collectively rendered into the bookdown document. Update the entry rmd_files: to add more/ change Rmarkdown files. rmd_files: [&quot;index.Rmd&quot;, &quot;0_config.Rmd&quot;, &quot;1_compile.Rmd&quot;, &quot;2_md_tips.Rmd&quot;, &quot;3_template_script.Rmd&quot;, &quot;Z_refs.Rmd&quot;] \\(\\rightarrow\\) kick out what you donâ€™t want and add new files if needed (exceptions: donâ€™t kick out index.Rmd and Z_refs.Rmd). Other parameters that need configuration are book_filename: and repo: (unfortunately, some things need to be updated at several places: here and in the other important files ðŸ™„). This is not really important, but the naming of the bookdown file (in this case eas_template.rds) should probably reflect the project rater than this template. book_filename: &quot;eas_template&quot; You probably donâ€™t need a reference to this template in your project. repo: https://github.com/k-hench/eas_bookdown 2.1.2 Configuration within _output.yml This is the file that mainly creates the TOC on the left hand side of the document. Here, you can adjust the topmost entry (which is currently set to a duplication of the github repo): toc: collapse: section before: | &lt;li&gt;&lt;a href=&quot;https://github.com/k-hench/eas_bookdown&quot;&gt;github repository&lt;/a&gt;&lt;/li&gt; Also, you can remove or replace the MPI logo here: after: | &lt;img style=&quot;position:absolute; bottom:0px; left:0px; width:100%; pointer-events:none;&quot; src=&quot;./img/eas_logo.svg&quot;&gt; 2.1.3 Configuration within index.Rmd This is where you set the information about title, author and date that will be displayed within the document. These are set in the yaml-header of the document (the part at the beginning that is sandwiched by the two lines with ---). Things that youâ€™ll want to adjust here are: title: \"Ecology of Animal Societies\" subtitle: \"Bookdown Template\" author: \"Author Name\" github-repo: k-hench/eas_bookdown description: \"A template for Rmarkdown-based project documentation\" 2.2 Clean Up Before using this template for your own project, you might want to clean up content that was filled specifically for the documentation of this template. Specifically, you might want to delete the content within the ./docs folder to avoid carrying over compiled the documentation of this template into your own project. Additionally you might want to remove the single entry of the bibliography file ./vignettes/book.bib as this citation was only included for demonstration purposes and is likely to be irrelevant for your project. 2.3 Nice-to-haves The following are adjustments that you might want to customize, but you do not necessarily need to. 2.3.1 Default Code Folding This template comes with the option to toggle the folding of code blocks. Currently, the default is set to expand the code-blocks - if you want them folded by default you can adjust by switching to create_html_header(\"fold\") within the file index.Rmd. `â€‹``{r set_fold, include=FALSE} source(&quot;R/initial_folding.R&quot;) create_html_header(&quot;show&quot;) # either &quot;show&quot; or &quot;fold&quot; `â€‹`` 2.3.2 Color Scheme If you want to change the color scheme, you can update the css stylesheet that is used within the bookdown project (style.css). Currently the template uses two main colors that come in dark and light flavor respectively (color1 (light), color1 (dark), color2 (light), color2 (dark)) To make this a little more convenient, you can use the provided pre-cursor scss file (scss can use variables while css can not - so this is convenient to swap eg. colors consistently in a style-sheet). To update the color scheme, open the style.scss file and adjust the color settings right at the beginning (by swapping the hex-color codes): $primary_color_d: #029c8c; $primary_color_l: #6fe0d5; $secondary_color_d: #674EA7; $secondary_color_l: #a797cf; $secondary_color_a: #a797cfcc; To then re-compile the css file (which is the one that is actually used within bookdown), run the following within the Terminal window of Rstudio. The Terminal window is different from the Console window that you might be used to to run R interactively. In the Terminal window you access the shell of your system directly. Make sure that the following is in order before you proceed: running pwd should provide the path of this repository (eg in my case /path/to/eas_bookdown) sass should be installed on your system: if you run which sass in the Terminal window, you should receive a prompt like eg. /home/usr_name/gems/bin/sass. If this prompts nothing, make sure to install sass first The actual conversion scss \\(\\rightarrow\\) css: cd vignettes sass --watch style.scss:style.css After this, sass will keep running and listen to changes in your css file. Hit &lt;ctrl&gt;&lt;c&gt; to make it stop. "],
["compilation.html", "3 Compilation", " 3 Compilation To compile the the entire document, the {bookdown} package is used. Unfortunately, the Rmd files (in fact the entire {bookdown} project) is located within a sub-folder and not in the main folder of the repositories R-project (where the .Rproj file is located). As you will see, this introduces mild inconveniences - yet this is intentional: I often use standalone R scripts to explore or test ideas (to sketch out stuff) or I include standalone scripts that are run from the command-line (eg. something like Rscript --vanilla R/script_xyz.R). I found it to be cleanest if all my R code assumes the base directory of the repository as working directory (this also has the added benefit that code from the Rmd scripts is executable in interactive sessions). Yet, to avoid unnecessary clutter in the base directory, the bookdown project is collected within the ./vignettes sub-folder. So, for this to work, two things need to be set: Firstly, each Rmd script needs to point to itâ€™s parent directory (the base directory) at the start - this is what the knitr::opts_knit$set(root.dir = '../') in every first code block does (donâ€™t run that code block interactively). Secondly (the inconvenient part), for the compilation of the bookdown document we need to switch into the ./vignettes folder: setwd(&quot;vignettes&quot;) # enter vignettes sub-folder bookdown::render_book(&quot;index.Rmd&quot;) # compile setwd(&quot;..&quot;) # return to base directory While this approach might seem a little tortuous, it allows for an interactive development of the individual .Rmd scripts during the development phase, that do not need to be adjusted to compile a consecutive project. Depending on the complexity of your Rmd scripts, running bookdown::render_book(\"index.Rmd\") might take a while. If you just want to check the current script/ chapter you can use the Knit button in Rstudio. "],
["markdown-tips-and-tricks.html", "4 Markdown Tips and Tricks 4.1 Beware/ Think Boxes 4.2 Saving and Loading Intermediate Steps 4.3 Citations 4.4 More Help with Rmarkdown and Bookdown", " 4 Markdown Tips and Tricks This template comes with a few pre-configured custom elements that can be easily used to structure your markdown documents. 4.1 Beware/ Think Boxes The beware and think boxes can be used by wrapping markdown text in :::beware/:::thinkcontent::: flags: :::beware This is a *beware* box demo! ::: This is a beware box demo! :::think This is a *think* box demo! ::: This is a think box demo! (If you are wondering what is happening under the hood: markdown will translate a :::somethingâ€¦::: section into html in the form of &lt;div class=\"something\"&gt;â€¦&lt;/div&gt;.) 4.2 Saving and Loading Intermediate Steps To minimize run-time when compiling my project documentation, I often pre-compute and save several intermediate steps of the scripts (eg. to a specific path - for instance a folder called ./steps/ within the main directory). I the load those intermediate steps during compilation (s. 3 Compilation for how to compile the document). Because of this, I want to indicate if a specific code block is not actually run by {knitr} (but their results are loaded in a hidden code block afterwards). Those code blocks with long run-times are indicated by their slightly darker background (executed code vs.Â loaded code) and the save symbol in their upper-right corner: When saving content while building a Rmarkdown script interactively, you can use bg-save code blocks to indicate that those blocks are not actually run. This is how using those code blocks usually looks in my scripts: `â€‹``{r class.source=&quot;bg-save&quot;, eval = FALSE} # run interactively one and export result, but dont run on compilation intermendiate_step &lt;- complicated_function(data) saveRDS(object = intermendiate_step, file = &quot;steps/intermendiate_step.Rds&quot;) `â€‹`` `â€‹``{r, include = FALSE} # quick import on compilation intermendiate_step &lt;- readRDS(file = &quot;steps/intermendiate_step.Rds&quot;) `â€‹`` The resulting output will then look like this (the second code block is hidden): # run interactively one and export result intermendiate_step &lt;- complicated_function(data) saveRDS(object = intermendiate_step, file = &quot;steps/intermendiate_step.Rds&quot;) (I also use this approach if I need to load off heavy lifting tasks to a cluster but still integrating the results into the overall documentation/ project.) Exporting intermediate steps is convenient, yet this comes at the cost of neglecting reproducibility and is thus dangerous ðŸ˜¨! If any part of your script upstream of the data-export changes, this will invalidate the exported files. Remember to re-run those code-blocks in such cases. In any case, you will want to run the scripts as a whole from start to finish without loading intermediate steps once your script is finalized to make sure you are not using outdated intermediate results! You can switch the code block parameters to achieve this: â€‹{r class.source=\"bg-save\", eval = FALSE} \\(\\rightarrow\\) â€‹{r class.source=\"bg-save\"} â€‹{r, include = FALSE} \\(\\rightarrow\\) â€‹{r, include = FALSE, eval = FALSE}. 4.3 Citations It is possible to cite sources within Rmarkdown using the notion [@sourceID1; @sourceID2] based on the BibTex citations that are stored within the file book.bib. In this {bookdown} (Xie 2016) template, the References are collected in the chapter 6 References. You can download citations in Bibtex format (.bib) in basically all citation-export tools from every journal. 4.4 More Help with Rmarkdown and Bookdown If you want to dig deeper, have a look at the official bookdown guide, R Markdown: The Definitive Guide or the R Markdown Cookbook. "],
["template-script.html", "5 Template Script", " 5 Template Script "],
["references.html", "6 References", " 6 References Xie, Yihui. 2016. Bookdown: Authoring Books and Technical Documents with R Markdown. Boca Raton, Florida: Chapman; Hall/CRC. https://github.com/rstudio/bookdown. "]
]
